spring:
  application:
    name: msvc-products
  kafka:
    bootstrap-servers: kafka1:9092,kafka2:9092,kafka3:9092
    producer:
      bootstrap-servers: kafka1:9092,kafka2:9092,kafka3:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # Controla cuantos acuses(cluster) derecibo requiere el producer del cluster de kafka antes
      #      acks: 1 # Por defecto es uno el lider
      acks: all # Espera a que todas las replicas sincronizadas se guanden el mensaje
      # El numero de veces en que kafka intentara enviar un mensaje
      # por defecto es un numero grande
#      retries: 10
      properties:
        # tiempo en que un producer espera antes de hacer un reintentor y envio
        #        retry.backoff.ms: 1000
        # Tiempo maxino en que el producer espra a que complete todo el envio
        delivery.timeout.ms: 120000 # Debe ser mayor o igual a la suma linger y timeour >=   linger + timout
        # MI productos envia lo mas rapido el mensaje
        linger.ms: 0
        request.timeout.ms: 30000
        # Para activar la idempotencia el acks debe ser all
        enable.idempotence: true
server:
  port: 8080